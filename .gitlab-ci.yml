default:
  image: debian:unstable

.depends-minimal:
  before_script:
  - apt-get update
  - apt-get -y install make dpkg-dev
  - apt-get -y install python3 python3-chardet python3-setuptools python3-pytest $OPTIONAL_DEPS $JOB_DEPS
  variables:
    OPTIONAL_DEPS: ""
    JOB_DEPS: ""

.depends-full:
  extends:
    .depends-minimal
  variables:
    OPTIONAL_DEPS: python3-apt

.unit-tests:
  script:
  - ./debian/rules lib/debian/__init__.py
  - LC_ALL=C py.test-3 --doctest-modules $COVERAGE --verbose $PYTEST_IGNORES lib/
  - LC_ALL=C.UTF-8 py.test-3 --doctest-modules $COVERAGE $COVERAGE_REPORT --verbose $PYTEST_IGNORES lib/
  variables:
    # Only generate coverage data and a report once in the test matrix
    COVERAGE: ""
    COVERAGE_REPORT: ""
    PYTEST_IGNORES: ""

unit-tests:
  extends:
  - .depends-full
  - .unit-tests
  after_script:
  - python3-coverage html
  variables:
    # Omit --cov-report to generate a report that gitlab can pick up with its log parser
    COVERAGE: --cov --cov-branch --cov-append
    # Generate a coverage report for the pages
    COVERAGE_REPORT: --cov-report=
    JOB_DEPS: python3-pytest-cov python3-coverage
  artifacts:
    paths:
      - htmlcov

unit-tests-minimal:
  extends:
  - .depends-minimal
  - .unit-tests

unit-tests-stable:
  image: debian:stable
  extends:
  - .depends-full
  - .unit-tests

unit-tests-oldstable:
  image: debian:oldstable
  extends:
  - .depends-full
  - .unit-tests
  variables:
    # Hide the RTS parser from py.test as it will break test collection as
    # it requires a newer version of Python
    PYTEST_IGNORES: --ignore lib/debian/tests/test_repro_deb822.py --ignore lib/debian/_deb822_repro/

unit-tests-oldoldstable:
  image: debian:oldoldstable
  extends:
  - .depends-full
  - .unit-tests
  variables:
    # Hide the RTS parser from py.test as it will break test collection as
    # it requires a newer version of Python
    PYTEST_IGNORES: --ignore lib/debian/tests/test_repro_deb822.py --ignore lib/debian/_deb822_repro/

style:
  extends: .depends-full
  script:
  - ./debian/rules qa
  - rm lib/debian/_version.py
  variables:
    JOB_DEPS: pylint mypy

docs:
  extends: .depends-full
  script:
  - rm -f docs/api/*
  - ./debian/rules doc
  - mv build/sphinx/html/ docs/
  variables:
    JOB_DEPS: python3-sphinx
  artifacts:
    paths:
      - docs

pages:
  stage: deploy
  script:
  - mv docs public
  - mv htmlcov public/
  dependencies:
    - docs
    - unit-tests
  artifacts:
    paths:
    - public
  only:
  - master
